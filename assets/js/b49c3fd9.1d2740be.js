/*! For license information please see b49c3fd9.1d2740be.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[670047],{268968:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=n(474848),i=n(28453);const s={id:"plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction",title:"createPublishGitlabMergeRequestAction()",description:"API reference for createPublishGitlabMergeRequestAction()"},a=void 0,c={id:"reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction",title:"createPublishGitlabMergeRequestAction()",description:"API reference for createPublishGitlabMergeRequestAction()",source:"@site/versioned_docs/version-stable/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction.md",sourceDirName:"reference",slug:"/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction",permalink:"/docs/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction.md",tags:[],version:"stable",frontMatter:{id:"plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction",title:"createPublishGitlabMergeRequestAction()",description:"API reference for createPublishGitlabMergeRequestAction()"}},o={},d=[{value:"Parameters",id:"parameters",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/docs/reference/",children:"Home"})," > ",(0,r.jsx)(t.a,{href:"/docs/reference/plugin-scaffolder-backend-module-gitlab",children:(0,r.jsx)(t.code,{children:"@backstage/plugin-scaffolder-backend-module-gitlab"})})," > ",(0,r.jsx)(t.a,{href:"/docs/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabmergerequestaction",children:(0,r.jsx)(t.code,{children:"createPublishGitlabMergeRequestAction"})})]}),"\n",(0,r.jsx)(t.p,{children:"Create a new action that creates a gitlab merge request."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'createPublishGitlabMergeRequestAction: (options: {\n    integrations: ScmIntegrationRegistry;\n}) => import("@backstage/plugin-scaffolder-node").TemplateAction<{\n    repoUrl: string;\n    title: string;\n    description: string;\n    branchName: string;\n    targetBranchName?: string | undefined;\n    sourcePath?: string | undefined;\n    targetPath?: string | undefined;\n    token?: string | undefined;\n    commitAction?: "auto" | "update" | "delete" | "create" | "skip" | undefined;\n    projectid?: string | undefined;\n    removeSourceBranch?: boolean | undefined;\n    assignee?: string | undefined;\n    reviewers?: string[] | undefined;\n}, import("@backstage/types").JsonObject>\n'})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.th,{children:["\n",(0,r.jsx)(t.p,{children:"Parameter"}),"\n"]}),(0,r.jsxs)(t.th,{children:["\n",(0,r.jsx)(t.p,{children:"Type"}),"\n"]}),(0,r.jsxs)(t.th,{children:["\n",(0,r.jsx)(t.p,{children:"Description"}),"\n"]})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["\n",(0,r.jsx)(t.p,{children:"options"}),"\n"]}),(0,r.jsxs)(t.td,{children:["\n",(0,r.jsxs)(t.p,{children:["{ integrations: ",(0,r.jsx)(t.a,{href:"/docs/reference/integration.scmintegrationregistry",children:"ScmIntegrationRegistry"}),"; }"]}),"\n"]}),(0,r.jsx)(t.td,{children:"\n"})]})})]}),"\n**Returns:**\n",(0,r.jsxs)(t.p,{children:['import("@backstage/plugin-scaffolder-node").',(0,r.jsx)(t.a,{href:"/docs/reference/plugin-scaffolder-node.templateaction",children:"TemplateAction"}),'<{ repoUrl: string; title: string; description: string; branchName: string; targetBranchName?: string | undefined; sourcePath?: string | undefined; targetPath?: string | undefined; token?: string | undefined; commitAction?: "auto" | "update" | "delete" | "create" | "skip" | undefined; projectid?: string | undefined; removeSourceBranch?: boolean | undefined; assignee?: string | undefined; reviewers?: string[] | undefined; }, import("@backstage/types").',(0,r.jsx)(t.a,{href:"/docs/reference/types.jsonobject",children:"JsonObject"}),">"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},221020:(e,t,n)=>{var r=n(296540),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,c=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function d(e,t,n){var r,s={},d=null,l=null;for(r in void 0!==n&&(d=""+n),void 0!==t.key&&(d=""+t.key),void 0!==t.ref&&(l=t.ref),t)a.call(t,r)&&!o.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===s[r]&&(s[r]=t[r]);return{$$typeof:i,type:e,key:d,ref:l,props:s,_owner:c.current}}t.Fragment=s,t.jsx=d,t.jsxs=d},474848:(e,t,n)=>{e.exports=n(221020)},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(296540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);