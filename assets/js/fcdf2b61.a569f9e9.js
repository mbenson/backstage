/*! For license information please see fcdf2b61.a569f9e9.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[675919],{291296:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>f,frontMatter:()=>d,metadata:()=>s,toc:()=>l});var t=i(474848),r=i(28453);const d={id:"plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction",title:"createPublishGitlabAction()",description:"API reference for createPublishGitlabAction()"},o=void 0,s={id:"reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction",title:"createPublishGitlabAction()",description:"API reference for createPublishGitlabAction()",source:"@site/../docs/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction.md",sourceDirName:"reference",slug:"/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction",permalink:"/docs/next/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction.md",tags:[],version:"current",frontMatter:{id:"plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction",title:"createPublishGitlabAction()",description:"API reference for createPublishGitlabAction()"}},a={},l=[{value:"Parameters",id:"parameters",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/next/reference/",children:"Home"})," > ",(0,t.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-backend-module-gitlab",children:(0,t.jsx)(n.code,{children:"@backstage/plugin-scaffolder-backend-module-gitlab"})})," > ",(0,t.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-backend-module-gitlab.createpublishgitlabaction",children:(0,t.jsx)(n.code,{children:"createPublishGitlabAction"})})]}),"\n",(0,t.jsx)(n.p,{children:"Creates a new action that initializes a git repository of the content in the workspace and publishes it to GitLab."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'function createPublishGitlabAction(options: {\n    integrations: ScmIntegrationRegistry;\n    config: Config;\n}): import("@backstage/plugin-scaffolder-node").TemplateAction<{\n    repoUrl: string;\n    defaultBranch?: string | undefined;\n    repoVisibility?: "internal" | "private" | "public" | undefined;\n    sourcePath?: string | boolean | undefined;\n    skipExisting?: boolean | undefined;\n    token?: string | undefined;\n    gitCommitMessage?: string | undefined;\n    gitAuthorName?: string | undefined;\n    gitAuthorEmail?: string | undefined;\n    setUserAsOwner?: boolean | undefined;\n    topics?: string[] | undefined;\n    settings?: {\n        path?: string | undefined;\n        auto_devops_enabled?: boolean | undefined;\n        ci_config_path?: string | undefined;\n        description?: string | undefined;\n        merge_method?: "merge" | "ff" | "rebase_merge" | undefined;\n        squash_option?: "always" | "never" | "default_on" | "default_off" | undefined;\n        topics?: string[] | undefined;\n        visibility?: "internal" | "private" | "public" | undefined;\n        only_allow_merge_if_all_discussions_are_resolved?: boolean | undefined;\n        only_allow_merge_if_pipeline_succeeds?: boolean | undefined;\n        allow_merge_on_skipped_pipeline?: boolean | undefined;\n    } | undefined;\n    branches?: {\n        name: string;\n        protect?: boolean | undefined;\n        create?: boolean | undefined;\n        ref?: string | undefined;\n    }[] | undefined;\n    projectVariables?: {\n        key: string;\n        value: string;\n        description?: string | undefined;\n        variable_type?: string | undefined;\n        protected?: boolean | undefined;\n        masked?: boolean | undefined;\n        raw?: boolean | undefined;\n        environment_scope?: string | undefined;\n    }[] | undefined;\n}, import("@backstage/types").JsonObject>;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.th,{children:["\n",(0,t.jsx)(n.p,{children:"Parameter"}),"\n"]}),(0,t.jsxs)(n.th,{children:["\n",(0,t.jsx)(n.p,{children:"Type"}),"\n"]}),(0,t.jsxs)(n.th,{children:["\n",(0,t.jsx)(n.p,{children:"Description"}),"\n"]})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\n",(0,t.jsx)(n.p,{children:"options"}),"\n"]}),(0,t.jsxs)(n.td,{children:["\n",(0,t.jsxs)(n.p,{children:["{ integrations: ",(0,t.jsx)(n.a,{href:"/docs/next/reference/integration.scmintegrationregistry",children:"ScmIntegrationRegistry"}),"; config: ",(0,t.jsx)(n.a,{href:"/docs/next/reference/config.config",children:"Config"}),"; }"]}),"\n"]}),(0,t.jsx)(n.td,{children:"\n"})]})})]}),"\n**Returns:**\n",(0,t.jsxs)(n.p,{children:['import("@backstage/plugin-scaffolder-node").',(0,t.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-node.templateaction",children:"TemplateAction"}),'<{ repoUrl: string; defaultBranch?: string | undefined; repoVisibility?: "internal" | "private" | "public" | undefined; sourcePath?: string | boolean | undefined; skipExisting?: boolean | undefined; token?: string | undefined; gitCommitMessage?: string | undefined; gitAuthorName?: string | undefined; gitAuthorEmail?: string | undefined; setUserAsOwner?: boolean | undefined; topics?: string[] | undefined; settings?: { path?: string | undefined; auto_devops_enabled?: boolean | undefined; ci_config_path?: string | undefined; description?: string | undefined; merge_method?: "merge" | "ff" | "rebase_merge" | undefined; squash_option?: "always" | "never" | "default_on" | "default_off" | undefined; topics?: string[] | undefined; visibility?: "internal" | "private" | "public" | undefined; only_allow_merge_if_all_discussions_are_resolved?: boolean | undefined; only_allow_merge_if_pipeline_succeeds?: boolean | undefined; allow_merge_on_skipped_pipeline?: boolean | undefined; } | undefined; branches?: { name: string; protect?: boolean | undefined; create?: boolean | undefined; ref?: string | undefined; }[] | undefined; projectVariables?: { key: string; value: string; description?: string | undefined; variable_type?: string | undefined; protected?: boolean | undefined; masked?: boolean | undefined; raw?: boolean | undefined; environment_scope?: string | undefined; }[] | undefined; }, import("@backstage/types").',(0,t.jsx)(n.a,{href:"/docs/next/reference/types.jsonobject",children:"JsonObject"}),">"]})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},221020:(e,n,i)=>{var t=i(296540),r=Symbol.for("react.element"),d=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,i){var t,d={},l=null,c=null;for(t in void 0!==i&&(l=""+i),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(c=n.ref),n)o.call(n,t)&&!a.hasOwnProperty(t)&&(d[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===d[t]&&(d[t]=n[t]);return{$$typeof:r,type:e,key:l,ref:c,props:d,_owner:s.current}}n.Fragment=d,n.jsx=l,n.jsxs=l},474848:(e,n,i)=>{e.exports=i(221020)},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(296540);const r={},d=t.createContext(r);function o(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);