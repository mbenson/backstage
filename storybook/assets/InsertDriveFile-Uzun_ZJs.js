import{R as e,r as c}from"./index-CTjT7uj6.js";import{q as J}from"./index-C7VAz2RX.js";import{d as D}from"./Add-B5wQe8xL.js";import{d as N}from"./ArrowForwardIos-DTfmWg7n.js";import{u as G,S as O}from"./SearchResult-Z1m0_0O1.js";import{m as b}from"./makeStyles-Dm18XSEu.js";import{T as F}from"./Typography-cLPqD11X.js";import{S as _,a as A,b as M}from"./Select-DgQR0wte.js";import{M as v}from"./MenuItem-o9ikw5b2.js";import{H as X}from"./DefaultResultListItem-DIzu8eIV.js";import{L as z}from"./List-CwINgjy8.js";import{L as V}from"./ListSubheader-CXPZCpnh.js";import{C as w}from"./Chip-D3QKLlv2.js";import{A as j}from"./useAnalytics-DTrkS1Gy.js";import{E as H}from"./EmptyState-Cs0rMn2h.js";import{P as W}from"./Progress-BMIOCQo7.js";import{R as $}from"./ResponseErrorPanel-4m3mhABj.js";import{L as B}from"./Link-V5mBMZDY.js";import{i as K}from"./interopRequireDefault-Y9pwbXtE.js";import{r as Q,i as U}from"./createSvgIcon-CdyNcF9g.js";const T=b(n=>({listSubheader:{display:"flex",alignItems:"center"},listSubheaderName:{marginLeft:n.spacing(1),textTransform:"uppercase"},listSubheaderChip:{color:n.palette.text.secondary,margin:n.spacing(0,0,0,1.5)},listSubheaderFilter:{display:"flex",color:n.palette.text.secondary,margin:n.spacing(0,0,0,1.5)},listSubheaderLink:{marginLeft:"auto",display:"flex",alignItems:"center"},listSubheaderLinkIcon:{fontSize:"inherit",marginLeft:n.spacing(.5)}})),R=n=>{const t=T(),{label:l,children:r,...a}=n;return e.createElement(w,{...a,className:t.listSubheaderFilter,variant:"outlined",label:e.createElement(e.Fragment,null,l,": ",r)})},Y=()=>null,Z=b(n=>({root:{fontSize:"inherit","&:focus":{outline:"none",background:n.palette.common.white},"&:not(:focus)":{cursor:"pointer",color:n.palette.primary.main,"&:hover":{textDecoration:"underline"}}}})),ee=n=>{const t=Z(),{label:l,value:r="None",onChange:a,onDelete:s}=n,i=c.useCallback(u=>{a(u.target.value)},[a]);return e.createElement(R,{label:l,onDelete:s},e.createElement(F,{role:"textbox",component:"span",className:t.root,onChange:i,contentEditable:!0,suppressContentEditableWarning:!0},r==null?void 0:r.toString()))},ne=b(n=>({root:{fontSize:"inherit","&:not(:focus)":{cursor:"pointer",color:n.palette.primary.main,"&:hover":{textDecoration:"underline"}},"&:focus":{outline:"none"},"&>div:first-child":{padding:0}}})),te=n=>{const t=ne(),{label:l,value:r="none",onChange:a,onDelete:s,children:i}=n,u=c.useCallback(p=>{a(p.target.value)},[a]);return e.createElement(R,{label:l,onDelete:s},e.createElement(_,{className:t.root,value:r,onChange:u,input:e.createElement(A,null),IconComponent:Y},e.createElement(v,{value:"none"},"None"),i))};function x(n){const t=T(),[l,r]=c.useState(null),{error:a,loading:s,icon:i,title:u,titleProps:p={},link:d=e.createElement(e.Fragment,null,"See all",e.createElement(N,{className:t.listSubheaderLinkIcon})),linkProps:y={},filterOptions:f,renderFilterOption:S=o=>e.createElement(v,{key:String(o),value:String(o)},String(o)),filterFields:m,renderFilterField:h,resultItems:g,renderResultItem:I=o=>e.createElement(X,{key:o.document.location,result:o.document}),disableRenderingWithNoResults:L,noResultsComponent:q=L?null:e.createElement(H,{missing:"data",title:"Sorry, no results were found"}),...P}=n,C=c.useCallback(o=>{r(o.currentTarget)},[]),E=c.useCallback(()=>{r(null)},[]);return s?e.createElement(W,null):a?e.createElement($,{title:"Error encountered while fetching search results",error:a}):g!=null&&g.length?e.createElement(z,{...P},e.createElement(V,{className:t.listSubheader},i,e.createElement(F,{className:t.listSubheaderName,component:"strong",...p},u),f?e.createElement(w,{className:t.listSubheaderChip,component:"button",icon:e.createElement(D,null),variant:"outlined",label:"Add filter","aria-controls":"filters-menu","aria-haspopup":"true",onClick:C}):null,f?e.createElement(M,{id:"filters-menu",anchorEl:l,open:!!l,onClose:E,onClick:E,keepMounted:!0},f.map(S)):null,m==null?void 0:m.map(o=>(h==null?void 0:h(o))??null),e.createElement(B,{className:t.listSubheaderLink,to:"/search",...y},d)),g.map(I)):e.createElement(e.Fragment,null,q)}function re(n){const{query:t,children:l,renderResultItem:r,linkProps:a={},...s}=n,i=G(l);return e.createElement(j,{attributes:{pluginId:"search",extension:"SearchResultGroup"}},e.createElement(O,{query:t},({loading:u,error:p,value:d},{term:y,types:f,pageCursor:S,filters:m={}})=>{const h=`/search?${J.stringify({term:y,types:f,filters:m,pageCursor:S,query:y},{arrayFormat:"brackets"})}`;return e.createElement(x,{...s,error:p,loading:u,linkProps:{to:h,...a},filterFields:Object.keys(m),resultItems:d==null?void 0:d.results,renderResultItem:r??i})}))}R.__docgenInfo={description:`Default layout for a search group filter field.
@param props - See {@link SearchResultGroupFilterFieldLayoutProps}.
@public`,methods:[],displayName:"SearchResultGroupFilterFieldLayout"};ee.__docgenInfo={description:`A text field that can be used as filter on search result groups.
@param props - See {@link SearchResultGroupTextFilterFieldProps}.
@example
\`\`\`
<SearchResultGroupTextFilterField
  id="lifecycle"
  label="Lifecycle"
  value={value}
  onChange={handleChangeFilter}
  onDelete={handleDeleteFilter}
/>
\`\`\`
@public`,methods:[],displayName:"SearchResultGroupTextFilterField",props:{onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: JsonValue) => void",signature:{arguments:[{type:{name:"union",raw:"JsonObject | JsonArray | JsonPrimitive",elements:[{name:"signature",type:"object",raw:"{ [key in string]?: JsonValue }",signature:{properties:[{key:{name:"string",required:!1},value:{name:"JsonValue"}}]}},{name:"JsonArray"},{name:"union",raw:"number | string | boolean | null",elements:[{name:"number"},{name:"string"},{name:"boolean"},{name:"null"}]}]},name:"value"}],return:{name:"void"}}},description:""}}};te.__docgenInfo={description:`A select field that can be used as filter on search result groups.
@param props - See {@link SearchResultGroupSelectFilterFieldProps}.
@example
\`\`\`
<SearchResultGroupSelectFilterField
  id="lifecycle"
  label="Lifecycle"
  value={filters.lifecycle}
  onChange={handleChangeFilter}
  onDelete={handleDeleteFilter}
>
  <MenuItem value="experimental">Experimental</MenuItem>
  <MenuItem value="production">Production</MenuItem>
 </SearchResultGroupSelectFilterField>
\`\`\`
@public`,methods:[],displayName:"SearchResultGroupSelectFilterField",props:{onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: JsonValue) => void",signature:{arguments:[{type:{name:"union",raw:"JsonObject | JsonArray | JsonPrimitive",elements:[{name:"signature",type:"object",raw:"{ [key in string]?: JsonValue }",signature:{properties:[{key:{name:"string",required:!1},value:{name:"JsonValue"}}]}},{name:"JsonArray"},{name:"union",raw:"number | string | boolean | null",elements:[{name:"number"},{name:"string"},{name:"boolean"},{name:"null"}]}]},name:"value"}],return:{name:"void"}}},description:""}}};x.__docgenInfo={description:`Default layout for rendering search results in a group.
@param props - See {@link SearchResultGroupLayoutProps}.
@public`,methods:[],displayName:"SearchResultGroupLayout",props:{error:{required:!1,tsType:{name:"Error"},description:"If defined, will render a default error panel."},loading:{required:!1,tsType:{name:"boolean"},description:"If defined, will render a default loading progress."},icon:{required:!0,tsType:{name:"JSX.Element"},description:"Icon that representing a result group."},title:{required:!0,tsType:{name:"ReactNode"},description:"The results group title content, it could be a text or an element."},titleProps:{required:!1,tsType:{name:"Partial",elements:[{name:"TypographyProps"}],raw:"Partial<TypographyProps>"},description:"Props for the results group title."},link:{required:!1,tsType:{name:"ReactNode"},description:"The results group link content, it could be a text or an element."},linkProps:{required:!1,tsType:{name:"Partial",elements:[{name:"intersection",raw:`Omit<MaterialLinkProps, 'to'> &
Omit<RouterLinkProps, 'to'> & {
  to: string;
  component?: ElementType<any>;
  noTrack?: boolean;
  externalLinkIcon?: boolean;
}`,elements:[{name:"Omit",elements:[{name:"MaterialLinkProps"},{name:"literal",value:"'to'"}],raw:"Omit<MaterialLinkProps, 'to'>"},{name:"Omit",elements:[{name:"RouterLinkProps"},{name:"literal",value:"'to'"}],raw:"Omit<RouterLinkProps, 'to'>"},{name:"signature",type:"object",raw:`{
  to: string;
  component?: ElementType<any>;
  noTrack?: boolean;
  externalLinkIcon?: boolean;
}`,signature:{properties:[{key:"to",value:{name:"string",required:!0}},{key:"component",value:{name:"ElementType",elements:[{name:"any"}],raw:"ElementType<any>",required:!1}},{key:"noTrack",value:{name:"boolean",required:!1}},{key:"externalLinkIcon",value:{name:"boolean",required:!1}}]}}]}],raw:"Partial<LinkProps>"},description:'Props for the results group link, the "to" prop defaults to "/search".'},filterOptions:{required:!1,tsType:{name:"Array",elements:[{name:"FilterOption"}],raw:"FilterOption[]"},description:'A generic filter options that is rendered on the "Add filter" dropdown.'},renderFilterOption:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  value: FilterOption,
  index: number,
  array: FilterOption[],
) => JSX.Element | null`,signature:{arguments:[{type:{name:"FilterOption"},name:"value"},{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"FilterOption"}],raw:"FilterOption[]"},name:"array"}],return:{name:"union",raw:"JSX.Element | null",elements:[{name:"JSX.Element"},{name:"null"}]}}},description:`Function to customize how filter options are rendered.
@remarks Defaults to a menu item where its value and label bounds to the option string.`},filterFields:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"A list of search filter keys, also known as filter field names."},renderFilterField:{required:!1,tsType:{name:"signature",type:"function",raw:"(key: string) => JSX.Element | null",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"union",raw:"JSX.Element | null",elements:[{name:"JSX.Element"},{name:"null"}]}}},description:"Function to customize how filter chips are rendered."},resultItems:{required:!1,tsType:{name:"Array",elements:[{name:"Result",elements:[{name:"SearchDocument"}],raw:"Result<SearchDocument>"}],raw:"SearchResult[]"},description:"Search results to be rendered as a group."},renderResultItem:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  value: SearchResult,
  index: number,
  array: SearchResult[],
) => JSX.Element | null`,signature:{arguments:[{type:{name:"Result",elements:[{name:"SearchDocument"}],raw:"Result<SearchDocument>"},name:"value"},{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"Result",elements:[{name:"SearchDocument"}],raw:"Result<SearchDocument>"}],raw:"SearchResult[]"},name:"array"}],return:{name:"union",raw:"JSX.Element | null",elements:[{name:"JSX.Element"},{name:"null"}]}}},description:"Function to customize how result items are rendered."},noResultsComponent:{required:!1,tsType:{name:"ReactNode"},description:"Optional component to render when no results. Default to <EmptyState /> component."},disableRenderingWithNoResults:{required:!1,tsType:{name:"boolean"},description:"Optional property to provide if component should not render the component when no results are found."}}};re.__docgenInfo={description:`Given a query, search for results and render them as a group.
@param props - See {@link SearchResultGroupProps}.
@public`,methods:[],displayName:"SearchResultGroup"};var k={},ae=K,le=U;Object.defineProperty(k,"__esModule",{value:!0});var oe=k.default=void 0,se=le(c),ie=ae(Q()),ue=(0,ie.default)(se.createElement("path",{d:"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"}),"InsertDriveFile");oe=k.default=ue;export{re as S,ee as a,te as b,x as c,oe as d};
