import{d as _}from"./Search-DzvIJZpZ.js";import{r as t,R as r}from"./index-CTjT7uj6.js";import{u as K}from"./useDebounce-4fqASXX_.js";import{S as y,u as N}from"./SearchContext-BQYqBmky.js";import{T as z}from"./TextField-BAT6F52R.js";import{I as b}from"./InputAdornment-RrQR1qjq.js";import{I as V}from"./IconButton-t4sr7qkK.js";import{B as F}from"./Button-DIC9OkW8.js";import{u as L}from"./ApiRef-BSBwTmJJ.js";import{b as M}from"./index-BkN7i-fW.js";import{A as O}from"./useAnalytics-DTrkS1Gy.js";import{c as Q}from"./ConfigApi-DBUUc3nU.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-CdyNcF9g.js";import"./capitalize-DIeCfh_E.js";import"./defaultTheme-DXWIybXe.js";import"./withStyles-DXZDjQMO.js";import"./hoist-non-react-statics.cjs-DzIEFHQI.js";import"./useControlled-CogIeAPD.js";import"./index-QA7F3UF1.js";import"./createSvgIcon-BJFLD5ph.js";import"./isMuiElement-Cb6QZSLO.js";import"./unstable_useId-B3Hiq1YI.js";import"./lodash-CoGan1YB.js";import"./useAsync-CXA3qup_.js";import"./useMountedState-DkESzBh4.js";import"./api-CKDuuaL7.js";import"./FormLabel-BD73FhT4.js";import"./formControlState-ByiNFc8I.js";import"./useFormControl-F4cJWIkJ.js";import"./InputLabel-BifwgJnz.js";import"./Select-DgQR0wte.js";import"./react-is.production.min-D0tnNtx9.js";import"./useTheme-DSe7I3Kh.js";import"./Popover-CdkpxSRS.js";import"./Modal-c6Oz2q5s.js";import"./classCallCheck-BNzALLS0.js";import"./Portal-DHXjgkAG.js";import"./Paper-qJ_yTBwO.js";import"./Grow-Brjbh0kw.js";import"./utils-BS_pqTfZ.js";import"./TransitionGroupContext-BtzQ-Cv7.js";import"./List-CwINgjy8.js";import"./ListContext-DydK1sOh.js";import"./Typography-cLPqD11X.js";import"./ButtonBase-CWOryP-z.js";const C=t.forwardRef((u,d)=>{const{onChange:n,onKeyDown:a=()=>{},onClear:i=()=>{},onSubmit:s=()=>{},debounceTime:o=200,clearButton:f=!0,fullWidth:m=!0,value:h,label:g,placeholder:S,inputProps:v={},InputProps:B={},endAdornment:E,...A}=u,I=L(Q),[p,c]=t.useState(""),l=t.useRef("");t.useEffect(()=>{c(e=>e===l.current?String(h):e)},[h,l]),K(()=>{l.current=p,n(p)},o,[p]);const x=t.useCallback(e=>{c(e.target.value)},[c]),R=t.useCallback(e=>{a&&a(e),s&&e.key==="Enter"&&s()},[a,s]),w=t.useCallback(()=>{l.current="",n(""),c(""),i&&i()},[n,i]),P=g?void 0:"Search",T=S??`Search in ${I.getOptionalString("app.title")||"Backstage"}`,k=M().getSystemIcon("search")||_,q=r.createElement(b,{position:"start"},r.createElement(V,{"aria-label":"Query",size:"small",disabled:!0},r.createElement(k,null))),D=r.createElement(b,{position:"end"},r.createElement(F,{"aria-label":"Clear",size:"small",onClick:w,onKeyDown:e=>{e.key==="Enter"&&e.stopPropagation()}},"Clear"));return r.createElement(y,{inheritParentContextIfAvailable:!0},r.createElement(z,{id:"search-bar-text-field","data-testid":"search-bar-next",variant:"outlined",margin:"normal",inputRef:d,value:p,label:g,placeholder:T,InputProps:{startAdornment:q,endAdornment:f?D:E,...B},inputProps:{"aria-label":P,...v},fullWidth:m,onChange:x,onKeyDown:R,...A}))}),U=t.forwardRef((u,d)=>{const{value:n="",onChange:a,...i}=u,{term:s,setTerm:o}=N();t.useEffect(()=>{n&&o(String(n))},[n,o]);const f=t.useCallback(m=>{a?a(m):o(m)},[a,o]);return r.createElement(y,{inheritParentContextIfAvailable:!0},r.createElement(O,{attributes:{pluginId:"search",extension:"SearchBar"}},r.createElement(C,{...i,ref:d,value:s,onChange:f})))});C.__docgenInfo={description:`All search boxes exported by the search plugin are based on the <SearchBarBase />,
and this one is based on the <InputBase /> component from Material UI.
Recommended if you don't use Search Provider or Search Context.

@public`,methods:[],displayName:"SearchBarBase",props:{debounceTime:{required:!1,tsType:{name:"number"},description:""},clearButton:{required:!1,tsType:{name:"boolean"},description:""},onClear:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},endAdornment:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};U.__docgenInfo={description:`Recommended search bar when you use the Search Provider or Search Context.

@public`,methods:[],displayName:"SearchBar"};export{U as SearchBar,C as SearchBarBase};
