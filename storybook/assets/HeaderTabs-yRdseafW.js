import{r as s,R as l}from"./index-CTjT7uj6.js";import{m}from"./makeStyles-Dm18XSEu.js";import{B as u}from"./Box-ByXAoPiX.js";import{T as b,a as y}from"./Tabs-D_yQ9p7P.js";const g=m(e=>({tabsWrapper:{gridArea:"pageSubheader",backgroundColor:e.palette.background.paper,paddingLeft:e.spacing(3),minWidth:0},defaultTab:{...e.typography.caption,padding:e.spacing(3,3),textTransform:"uppercase",fontWeight:e.typography.fontWeightBold,color:e.palette.text.secondary},selected:{color:e.palette.text.primary},tabRoot:{"&:hover":{backgroundColor:e.palette.background.default,color:e.palette.text.primary}}}),{name:"BackstageHeaderTabs"});function T(e){const{tabs:i,onChange:o,selectedIndex:a}=e,[c,p]=s.useState(a??0),r=g(),d=s.useCallback((n,t)=>{a===void 0&&p(t),o&&o(t)},[a,o]);return s.useEffect(()=>{a!==void 0&&p(a)},[a]),l.createElement(u,{className:r.tabsWrapper},l.createElement(b,{indicatorColor:"primary",textColor:"inherit",variant:"scrollable",scrollButtons:"auto","aria-label":"tabs",onChange:d,value:c},i.map((n,t)=>l.createElement(y,{"data-testid":`header-tab-${t}`,label:n.label,key:n.id,value:t,className:r.defaultTab,classes:{selected:r.selected,root:r.tabRoot},...n.tabProps}))))}T.__docgenInfo={description:`Horizontal Tabs component

@public`,methods:[],displayName:"HeaderTabs",props:{tabs:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  label: string;
  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"tabProps",value:{name:"TabProps",elements:[{name:"ReactElementType",raw:"React.ElementType"},{name:"signature",type:"object",raw:"{ component?: React.ElementType }",signature:{properties:[{key:"component",value:{name:"ReactElementType",raw:"React.ElementType",required:!1}}]}}],raw:"TabProps<React.ElementType, { component?: React.ElementType }>",required:!1}}]}}],raw:"Tab[]"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(index: number) => void",signature:{arguments:[{type:{name:"number"},name:"index"}],return:{name:"void"}}},description:""},selectedIndex:{required:!1,tsType:{name:"number"},description:""}}};export{T as H};
